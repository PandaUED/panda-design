{"name":"style","class":"Variable","body":"\n\n包含颜色等全局样式变量\n\n## API\n\n| 属性       | 说明             | 类型     | 调用方法                                     |\n| :------- | -------------- | ------ | ---------------------------------------- |\n| color    | 颜色             | string | `style.color[type]`               |\n| gradient | 渐变色,支持自定义deg角度 | func   | `style.gradient[type](deg:number)` |\n| split | 真实1px分割线，需要填写方向`all`,`top`,`bottom`,`left`,`right` | string   | `style.split[direction]` |\n| text | 关于文字的快捷样式,如过长截断省略等`ellipsis` | string   | `style.split[type]` |\n","title":"样式变量","code":"import _ from 'lodash';\nimport { Card, style, View, WhiteSpace } from 'pand';\nimport { rgba } from 'polished';\nimport styled from 'styled-components';\n\nconst { Header } = Card;\n\nexport default () => {\n  const Item = styled.div`\n    margin: 0.4rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  `;\n  const Ball = styled.div`\n    width: 72px;\n    height: 72px;\n    border-radius: 50%;\n    margin: 0.8rem 0;\n  `;\n  const Color = Ball.extend`\n    width: 72px;\n    height: 72px;\n    border-radius: 50%;\n    background: ${porp => porp.color};\n    box-shadow: 0 8px 24px 0 ${porp => rgba(porp.color, 0.5)};\n    margin: 0.8rem 0;\n  `;\n  const Gradient = Ball.extend`\n    background: ${porp => porp.gradient};\n    box-shadow: 0 8px 24px 0 ${porp => rgba(porp.color, 0.5)};\n  `;\n  const Title = styled.div`\n    text-align: center;\n    color: ${style.color.textNoraml};\n    margin-bottom: 0.6rem;\n    font-size: 0.8rem;\n  `;\n  const Hex = Title.extend`\n    color: ${style.color.textLight};\n    font-size: 0.7rem;\n    margin-bottom: 0.4rem;\n  `;\n  const GradientHex = Hex.extend`\n    width: 72px;\n    position: relative;\n    widows: 100%;\n    &:before {\n      content: '●';\n      color: ${porp => porp.color};\n      position: absolute;\n      left: 0;\n    }\n  `;\n\n  const Body = styled(Card.Body)`\n    display: flex;\n    flex-wrap: wrap;\n  `;\n\n  const ColorDisplay = [];\n\n  _.forEach(style.color, (color, key) => {\n    ColorDisplay.push(\n      <Item key={key}>\n        <Color color={color} />\n        <Title>{key}</Title>\n        <Hex>{color}</Hex>\n      </Item>\n    );\n  });\n\n  const GradientDisplay = [];\n\n  _.forEach(style.gradient, (color, key) => {\n    const Color = color(45);\n    const ColorArray = Color.replace(/(.*)\\(|\\)|[0-9]+%|[0-9]+deg/g, '').split(\n      ','\n    );\n    GradientDisplay.push(\n      <Item key={key}>\n        <Gradient color={style.color[key]} gradient={Color} />\n        <Title>{key}</Title>\n        <GradientHex color={ColorArray[1]}>{ColorArray[1]}</GradientHex>\n        <GradientHex color={ColorArray[2]}>{ColorArray[2]}</GradientHex>\n      </Item>\n    );\n  });\n\n  return (\n    <View>\n      <WhiteSpace />\n      <Card>\n        <Header split>Gradient</Header>\n        <Body padding>{GradientDisplay}</Body>\n      </Card>\n      <WhiteSpace />\n      <Card>\n        <Header split>Color</Header>\n        <Body padding>{ColorDisplay}</Body>\n      </Card>\n    </View>\n  );\n};\n"}