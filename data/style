{"class":"Variable","name":"style","body":"\n\n\n包含颜色等全局样式变量\n\n## API\n\n| 属性       | 说明             | 类型     | 调用方法                                     |\n| :------- | -------------- | ------ | ---------------------------------------- |\n| color    | 颜色             | string | `style.color[type]`               |\n| gradient | 渐变色,支持自定义deg角度 | func   | `style.gradient[type](deg:number)` |\n| split | 真实1px分割线，需要填写方向`all`,`top`,`bottom`,`left`,`right` | string   | `style.split[direction]` |\n| text | 关于文字的快捷样式,如过长截断省略等`ellipsis` | string   | `style.split[type]` |\n","title":"样式变量","code":"import _ from 'lodash';\nimport { Card, style, View, WhiteSpace } from 'pand';\nimport { rgba } from 'polished';\nimport styled from 'styled-components';\n\nlet {Header, Body} = Card;\n\nexport default () => {\n\tconst Item        = styled.div`\n\t\tmargin:.4rem;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n`;\n\tconst Ball        = styled.div`\n\t\twidth: 72px;\n\t\theight: 72px;\n\t\tborder-radius: 50%;\n\t\tmargin: .8rem 0;\n`;\n\tconst Color       = Ball.extend`\n\t\twidth: 72px;\n\t\theight: 72px;\n\t\tborder-radius: 50%;\n\t\tbackground: ${porp => porp.color};\t\n\t\tbox-shadow: 0 8px 24px 0 ${porp => rgba(porp.color, 0.5)};\n\t\tmargin: .8rem 0;\n`;\n\tconst Gradient    = Ball.extend`\n\t\tbackground: ${porp => porp.gradient};\t\n\t\tbox-shadow: 0 8px 24px 0 ${porp => rgba(porp.color, 0.5)};\n`;\n\tconst Title       = styled.div`\n\t\ttext-align: center;\n\t\tcolor: ${style.color.textNoraml};\n\t\tmargin-bottom: .6rem;\n\t\tfont-size: .8rem;\n`;\n\tconst Hex         = Title.extend`\n\t\tcolor: ${style.color.textLight};\n\t\tfont-size: .7rem;\n\t\tmargin-bottom: .4rem;\n`;\n\tconst GradientHex = Hex.extend`\n\t\twidth: 72px;\n\t\tposition: relative;\n\t\twidows: 100%;\n\t\t&:before{\n\t\t\t\tcontent:\"●\";\n\t\t\t\tcolor:${porp => porp.color};\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 0;\n\t\t}\n`;\n\n\tBody = styled(Body)`\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n  `;\n\n\tconst ColorDisplay = [];\n\n\t_.forEach(style.color, (color, key) => {\n\t\tColorDisplay.push(\n\t\t\t<Item key={key}>\n\t\t\t\t<Color color={color}/>\n\t\t\t\t<Title>{key}</Title>\n\t\t\t\t<Hex>{color}</Hex>\n\t\t\t</Item>\n\t\t);\n\t});\n\n\tconst GradientDisplay = [];\n\n\t_.forEach(style.gradient, (color, key) => {\n\t\tcolor          = color(45);\n\t\tlet ColorArray = color.replace(/(.*)\\(|\\)|[0-9]+%|[0-9]+deg/g, '').split(',');\n\t\tGradientDisplay.push(\n\t\t\t<Item key={key}>\n\t\t\t\t<Gradient color={style.color[key]} gradient={color}/>\n\t\t\t\t<Title>{key}</Title>\n\t\t\t\t<GradientHex color={ColorArray[1]}>{ColorArray[1]}</GradientHex>\n\t\t\t\t<GradientHex color={ColorArray[2]}>{ColorArray[2]}</GradientHex>\n\t\t\t</Item>\n\t\t);\n\t});\n\n\treturn (\n\t\t<View>\n\t\t\t<WhiteSpace/>\n\t\t\t<Card>\n\t\t\t\t<Header split>Gradient</Header>\n\t\t\t\t<Body padding>\n\t\t\t\t{GradientDisplay}\n\t\t\t\t</Body>\n\t\t\t</Card>\n\t\t\t<WhiteSpace/>\n\t\t\t<Card>\n\t\t\t\t<Card.Header split>Color</Card.Header>\n\t\t\t\t<Body padding>\n\t\t\t\t{ColorDisplay}\n\t\t\t\t</Body>\n\t\t\t</Card>\n\t\t</View>\n\t);\n}"}