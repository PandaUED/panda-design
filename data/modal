{"class":"Feedback","name":"Modal","body":"\n\n\n说明用途\n\n## API\n\n| 属性        | 说明                                |   类型   |   默认值   |\n| :-------- | --------------------------------- | :----: | :-----: |\n| props     | 说明                | - | - |\n| **OTHER** |                                   |        |         |\n| classname | 样式类名                              | string |    -    |\n| style     | 自定义样式                             | object |    -    |\n| onClick   | 点击按钮的点击回调函数                       |  func  |    -    |\n","title":"弹窗","code":"/**\n * Created by Liqi on 17/9/27.\n */\n\nimport { Modal, Dialog, DialogSharedInstance, style, WhiteSpace } from 'pand';\nimport styled from 'styled-components';\nimport React from 'react';\nimport './../../components/Modal/_modal.scss';\n\nconst MaskContentTest = styled.div`\n  height: 200px;\n  width: 200px;\n  background: #fff;\n`;\nclass PageFeedback extends React.Component {\n  state = {\n    maskVisible: false,\n    modalVisible: false,\n  };\n  render() {\n    const Feedback = styled.div`\n      > a {\n        display: block;\n        padding: 1rem;\n        background: #fff;\n        color: #444;\n        ${style.split.bottom};\n      }\n    `;\n    return (\n      <Feedback>\n        <WhiteSpace>Feedback</WhiteSpace>\n        <Modal\n          key={1}\n          maskClosable\n          maskCls=\"Mask\"\n          ref={c => {\n            this.refMask = c;\n          }}\n        >\n          <MaskContentTest>Mask</MaskContentTest>\n        </Modal>\n        <a\n          href=\"javascript:;\"\n          onClick={() => {\n            this.refMask.show();\n          }}\n        >\n          Mask\n        </a>\n        <Modal\n          key={2}\n          closable\n          maskCls=\"Modal\"\n          ref={c => {\n            this.refModal = c;\n          }}\n        >\n          <MaskContentTest>Modal</MaskContentTest>\n        </Modal>\n        <a\n          href=\"javascript:;\"\n          onClick={() => {\n            this.refModal.show();\n          }}\n        >\n          Modal\n        </a>\n        <a\n          href=\"javascript:;\"\n          onClick={() => {\n            Dialog.sharedInstance.alert({\n              title: '开启新网存管',\n              message: '内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容',\n              callback: result => {\n                console.log(`callback: ${result}`);\n              },\n            });\n          }}\n        >\n          alert classic\n        </a>\n        <a\n          href=\"javascript:;\"\n          onClick={() => {\n            Dialog.sharedInstance.confirm({\n              title: '开启新网存管',\n              message: '内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容',\n              callback: result => {\n                console.log(`callback: ${result}`);\n              },\n            });\n          }}\n        >\n          confirm classic\n        </a>\n        <a\n          href=\"javascript:;\"\n          onClick={() => {\n            Dialog.sharedInstance.alert({\n              title: '开启新网存管',\n              message: '内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容',\n              callback: result => {\n                console.log(`callback: ${result}`);\n              },\n              theme: 'new',\n            });\n          }}\n        >\n          alert new\n        </a>\n        <a\n          href=\"javascript:;\"\n          onClick={() => {\n            Dialog.sharedInstance.confirm({\n              title: '开启新网存管',\n              message: '内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容',\n              callback: result => {\n                console.log(`callback: ${result}`);\n              },\n              theme: 'new',\n            });\n          }}\n        >\n          confirm new\n        </a>\n        <a href=\"javascript:;\">alert new with icon TODO</a>\n        <a href=\"javascript:;\">Toast TODO</a>\n        <a href=\"javascript:;\">ActionSheet TODO</a>\n        <DialogSharedInstance /> {/* TODO: 需在跟节点初始化 */}\n      </Feedback>\n    );\n  }\n}\nexport default PageFeedback;\n"}